<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.sc</groupId>
    <artifactId>air_crawler</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>air_crawler</name>
    <description>air_crawler</description>
    <properties>
        <java.version>1.8</java.version>
        <commons.collections.version>3.2.2</commons.collections.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.1.0</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.2.2</version>
        </dependency>
        <dependency>
            <!-- jsoup HTML parser library @ https://jsoup.org/ -->
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.11.3</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>${commons.collections.version}</version>
        </dependency>
        <!-- 阿里数据库连接池 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.2.11</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!--                <version>2.1.1.RELEASE</version>-->
                <configuration>
                    <fork>true</fork> <!-- 如果没有该配置，devtools不会生效 -->
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--            http://dmp.fabric8.io/ 文档地址-->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.40.2</version>
                <!--  自定义maven构建生命周期执行的命令-->
                <executions>
                    <execution>
                        <id>stop-docker-container</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                    <execution>
                        <id>remove-docker-image</id>
                        <goals>
                            <goal>remove</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                    <execution>
                        <id>build-docker-images</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>start-docker-container</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!--                    指定docker服务器-->
                    <dockerHost>http://172.16.0.170:2375</dockerHost>
                    <images>
                        <image>
                            <!--                            镜像别名-->
                            <alias>service</alias>
                            <!--                            镜像名称-->
                            <name>${project.name}</name>
                            <!--                            构建步骤 生成Dockerfile 步骤-->
                            <build>
                                <!--                                基础镜像-->
                                <from>amazoncorretto:8u352</from>
                                <!--                                工作路径-->
                                <workdir>/</workdir>
                                <!--                                将文件打包到镜像-->
                                <assemblies>
                                    <assembly>
                                        <name>jars</name>
                                        <descriptorRef>artifact</descriptorRef>
                                        <targetDir>/</targetDir>
                                    </assembly>
                                </assemblies>
                                <!--                                启动容器命令-->
                                <cmd>
                                    <shell>
                                        java -jar \
                                        ${project.name}.jar
                                    </shell>
                                </cmd>
                            </build>

                            <!--                            run命令参数，启动参数-->
                            <run>
                                <ports>
                                    <port>8383:8383</port>
                                </ports>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
        <finalName>${project.artifactId}</finalName>
    </build>

</project>
